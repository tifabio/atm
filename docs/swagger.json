{
    "openapi": "3.0.0",
    "info": {
        "title": "ATM Simulator",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://atm-linx.herokuapp.com"
        }
    ],
    "paths": {
        "/accounts": {
            "put": {
                "tags": [
                    "accounts"
                ],
                "description": "Deposit money to an existing account",
                "operationId": "App\\Http\\Controllers\\AccountController::deposit",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "cpf",
                                    "tipo_conta",
                                    "valor"
                                ],
                                "properties": {
                                    "cpf": {
                                        "type": "string"
                                    },
                                    "tipo_conta": {
                                        "type": "string",
                                        "enum": [
                                            "CONTA_CORRENTE",
                                            "CONTA_POUPANCA"
                                        ]
                                    },
                                    "valor": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Account Model",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "accounts"
                ],
                "description": "Create new account",
                "operationId": "App\\Http\\Controllers\\AccountController::save",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "cpf",
                                    "tipo_conta",
                                    "saldo"
                                ],
                                "properties": {
                                    "cpf": {
                                        "type": "string"
                                    },
                                    "tipo_conta": {
                                        "type": "string",
                                        "enum": [
                                            "CONTA_CORRENTE",
                                            "CONTA_POUPANCA"
                                        ]
                                    },
                                    "saldo": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Account Model",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "description": "Retrieve data from existent user",
                "operationId": "App\\Http\\Controllers\\UserController::get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Model",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "users"
                ],
                "description": "Update data from existent user",
                "operationId": "App\\Http\\Controllers\\UserController::save",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "nome",
                                    "cpf",
                                    "datanascimento"
                                ],
                                "properties": {
                                    "nome": {
                                        "type": "string"
                                    },
                                    "cpf": {
                                        "type": "string"
                                    },
                                    "datanascimento": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User Model",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "users"
                ],
                "description": "Delete existent user",
                "operationId": "App\\Http\\Controllers\\UserController::delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "users"
                ],
                "description": "Find by criteria and retrieve data from existent user",
                "operationId": "App\\Http\\Controllers\\UserController::find",
                "parameters": [
                    {
                        "name": "nome",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cpf",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Model",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "users"
                ],
                "description": "Create new user",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "nome",
                                    "cpf",
                                    "datanascimento"
                                ],
                                "properties": {
                                    "nome": {
                                        "type": "string"
                                    },
                                    "cpf": {
                                        "type": "string"
                                    },
                                    "datanascimento": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User Model",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Account": {
                "title": "Account Model",
                "description": "Account Model",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "id_usuario": {
                        "type": "integer"
                    },
                    "id_tipo_conta": {
                        "type": "integer"
                    },
                    "saldo": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User Model",
                "description": "User Model",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "nome": {
                        "type": "string"
                    },
                    "cpf": {
                        "type": "string"
                    },
                    "datanascimento": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    }
}